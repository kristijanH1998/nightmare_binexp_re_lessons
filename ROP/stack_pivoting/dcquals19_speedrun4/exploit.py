# junk payload of 256 bytes plus 0x00 overflow byte (257 bytes total ) is sent within fgets() called at 0x400baf, and the 0x00 byte overflows the least significant byte of the frame pointer address that is located on the stack and ends up popped into RBP as part of leave() instruction inside fgets()
# after that, execution returns back to scanInput() (which called fgets()), and here everything proceeds normally until the leave;ret instructions: at leave instruction, value in RBP (frame pointer address whose least significant byte was overwritten in fgets()) is moved to ESP, and this effectively moves the stack pointer to a different location on stack, where we place our ROP chain. This chain is executed in the next instruction in scanInput(), which after this last leave instruction is a ret instruction, which pops the ROP gadget address into RIP and the exploit begins

from pwn import *
